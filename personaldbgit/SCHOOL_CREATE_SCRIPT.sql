-- 고등학교 하나를 DB화 해보자.
-- TABLE은 SC_STUDENT, SC_TEACHER, SC_CLASS, SC_GRADE, 
-- SC_CA, SC_PARENTS 등등

-- SC_STUDENT에는 학생 번호(PK), 학생 이름, 학생 주민번호, 학생 성별, 학생 주소, 학생 전화번호, 
-- 학생 비상 연락처, 부모님번호, 반번호, 성적, 문/이과 구분, 담임교수번호, 차상위계층여부, 재학생 여부
-- 반장 여부
DROP TABLE SC_STUDENT;

CREATE TABLE SC_STUDENT(
  STUDENT_NO NUMBER 
, STUDENT_NAME VARCHAR2(30) CONSTRAINT NN_STUDENT_NAME NOT NULL
, STUDENT_SSN VARCHAR2(30) CONSTRAINT NN_STUDENT_SSN NOT NULL
, STUDENT_GENDER CHAR(3) CONSTRAINT NN_STUDENT_GENDER NOT NULL
, STUDENT_ADDRESS VARCHAR2(90) CONSTRAINT NN_STUDENT_ADDRESS NOT NULL
, STUDENT_PHONE VARCHAR2(30)
, STUDENT_CLASS_GRADE NUMBER CONSTRAINT NN_STUDENT_GRADE NOT NULL
, STUDENT_CLASS_NUMBER NUMBER CONSTRAINT NN_STUDENT_NUMBER NOT NULL
, STUDENT_SC_POINT NUMBER
, STUDENT_MC_POINT NUMBER
, STUDENT_N_H_HIERARCHY CHAR(3) DEFAULT 'N' CONSTRAINT NN_STUDENT_N_H_HIERARCHY NOT NULL 
, STUDENT_ENROLLED CHAR(3) DEFAULT 'Y' CONSTRAINT NN_STUDENT_ENROLLED NOT NULL
, CONSTRAINT PK_STUDENT_NO PRIMARY KEY(STUDENT_NO)
, CONSTRAINT UK_STUDENT_SSN UNIQUE(STUDENT_SSN)
, CONSTRAINT CK_STUDENT_GENDER CHECK(STUDENT_GENDER IN ('M' ,'W'))
, CONSTRAINT FK_STUDENT_CLASS_GRADE FOREIGN KEY (STUDENT_CLASS_GRADE, STUDENT_CLASS_NUMBER) 
                                    REFERENCES SC_CLASS(CLASS_GRADE, CLASS_NUMBER)
, CONSTRAINT CK_STUDENT_N_H_HIERARCHY CHECK(STUDENT_N_H_HIERARCHY IN ('Y','N'))
, CONSTRAINT CK_STUDENT_ENROLLED CHECK(STUDENT_ENROLLED IN ('Y' , 'N'))
);

COMMENT ON COLUMN SC_STUDENT.STUDENT_NO IS '학생번호';
COMMENT ON COLUMN SC_STUDENT.STUDENT_NAME IS '학생이름';
COMMENT ON COLUMN SC_STUDENT.STUDENT_SSN IS '학생주민등록번호';
COMMENT ON COLUMN SC_STUDENT.STUDENT_GENDER IS '학생성별';
COMMENT ON COLUMN SC_STUDENT.STUDENT_ADDRESS IS '학생주소';
COMMENT ON COLUMN SC_STUDENT.STUDENT_PHONE IS '학생전화번호';
COMMENT ON COLUMN SC_STUDENT.STUDENT_CLASS_GRADE IS '학년';
COMMENT ON COLUMN SC_STUDENT.STUDENT_CLASS_NUMBER IS '반';
COMMENT ON COLUMN SC_STUDENT.STUDENT_SC_POINT IS '학교성적';
COMMENT ON COLUMN SC_STUDENT.STUDENT_MC_POINT IS '모의고사성적';
COMMENT ON COLUMN SC_STUDENT.STUDENT_N_H_HIERARCHY IS '차상위계층여부';
COMMENT ON COLUMN SC_STUDENT.STUDENT_ENROLLED IS '재학생여부';


-- SC_PARENTS는 학생들의 부모에 대한 정보를 담는 테이블
-- 부모 번호(PK) 부모이름, 부모연락처, 자식번호(STUDENT_NO), 성별, 연락처, 직업
DROP TABLE SC_PARENTS;
CREATE TABLE SC_PARENTS(
  PARENTS_NO NUMBER 
, PARENTS_NAME VARCHAR2(30) CONSTRAINT NN_PARENTS_NAME NOT NULL
, PARENTS_GENDER CHAR(3) CONSTRAINT NN_PARENTS_GENDER NOT NULL
, PARENTS_PHONE VARCHAR2(30) 
, PARENTS_CHILD_NO NUMBER CONSTRAINT NN_PARENTS_CHILE_NO NOT NULL
, PARENTS_JOB VARCHAR2(30) CONSTRAINT NN_PARENTS_JOB NOT NULL
, CONSTRAINT PK_PARENTS_NO PRIMARY KEY(PARENTS_NO)
, CONSTRAINT CK_PARENTS_GENDER CHECK(PARENTS_GENDER IN ('M', 'F'))
, CONSTRAINT FK_PARENTS_CHILD_NO FOREIGN KEY (PARENTS_CHILD_NO) 
                                 REFERENCES SC_STUDENT(STUDENT_NO)
);

COMMENT ON COLUMN SC_PARENTS.PARENTS_NO IS '부모님 번호';
COMMENT ON COLUMN SC_PARENTS.PARENTS_NAME IS '부모님 이름';
COMMENT ON COLUMN SC_PARENTS.PARENTS_GENDER IS '부모님 성별';
COMMENT ON COLUMN SC_PARENTS.PARENTS_PHONE IS '부모님 전화번호';
COMMENT ON COLUMN SC_PARENTS.PARENTS_CHILD_NO IS '학생 번호';
COMMENT ON COLUMN SC_PARENTS.PARENTS_JOB IS '부모님직업';




-- SC.CLASS_NO는 반 번호에 대한 정보
-- 학년 번호(M_PK), 반 번호(M_PK), 문/이과 구분/ 진학반 구분/ 반장 여부/

DROP TABLE SC_CLASS;
CREATE TABLE SC_CLASS(
  CLASS_GRADE NUMBER  
, CLASS_NUMBER NUMBER 
, CLASS_CURRICULUM VARCHAR(6) CONSTRAINT NN_CLASS_CURRICULUM NOT NULL
, CLASS_HIGH CHAR(3) DEFAULT 'N' CONSTRAINT NN_CLASS_HIGH NOT NULL
, CLASS_PRESIDENT CHAR(3) DEFAULT 'N' CONSTRAINT NN_CLASS_PRESIDENT NOT NULL
, CLASS_COACH_TEACHER NUMBER CONSTRAINT nn_CLASS_COACH_TEACHER NOT NULL
, CONSTRAINT PK_CLASS_GRADE_NUMBER PRIMARY KEY (CLASS_GRADE, CLASS_NUMBER)
, CONSTRAINT CK_CLASS_CURRICULUM CHECK(CLASS_CURRICULUM IN ('문과' , '이과', '공통'))
, CONSTRAINT CK_CLASS_HIGH CHECK(CLASS_HIGH IN ('Y', 'M'))
, CONSTRAINT CK_CLASS_PRESIDENT CHECK(CLASS_PRESIDENT IN ('Y', 'N'))
, CONSTRAINT FK_CLASS_COACH_TEACHER FOREIGN KEY(CLASS_COACH_TEACHER)
                                    REFERENCES SC_TEACHER(TEACHER_NO)
);

COMMENT ON COLUMN SC_CLASS.CLASS_GRADE IS '학년 번호';
COMMENT ON COLUMN SC_CLASS.CLASS_NUMBER IS '반 번호';
COMMENT ON COLUMN SC_CLASS.CLASS_CURRICULUM IS '문/이과 여부';
COMMENT ON COLUMN SC_CLASS.CLASS_HIGH IS '진학반 여부';
COMMENT ON COLUMN SC_CLASS.CLASS_PRESIDENT IS '반장 여부';
COMMENT ON COLUMN SC_CLASS.CLASS_COACH_TEACHER IS '담임 교사 번호';

DROP TABLE SC_TEACHER;

CREATE TABLE SC_TEACHER(
  TEACHER_NO NUMBER
, TEACHER_NAME VARCHAR2(30) CONSTRAINT NN_TEACHER_NAME NOT NULL
, TEACHER_GENDER VARCHAR2(3) CONSTRAINT NN_TEACHER_GENDER NOT NULL
, TEACHER_OLD NUMBER CONSTRAINT NN_TEACHER_OLD NOT NULL
, TEACHER_PHONE VARCHAR2(30) CONSTRAINT NN_TEACHER_PHONE NOT NULL
, TEACHER_CLASS NUMBER CONSTRAINT NN_TEACHER_CLASS NOT NULL
, TEACHER_SALARY_CLASS NUMBER CONSTRAINT NN_TEACHER_SALARY_CLASS NOT NULL
, TEACHER_SALARY NUMBER CONSTRAINT NN_TEACHER_SALARY NOT NULL
, TEACHER_HIRE_DATE DATE CONSTRAINT NN_TEACHER_HIRE_DATE NOT NULL
, CONSTRAINT PK_TEACHER_NO PRIMARY KEY (TEACHER_NO)
, CONSTRAINT FK_TEACHER_CLASS FOREIGN KEY(TEACHER_CLASS)
                              REFERENCES SC_SUBJECT(SUBJECT_NO)  
, CONSTRAINT CK_TEACHER_GENDER CHECK(TEACHER_GENDER IN ('M' , 'F'))
);

COMMENT ON COLUMN SC_TEACHER.TEACHER_NO IS '교사 번호';
COMMENT ON COLUMN SC_TEACHER.TEACHER_NAME IS '교사 이름';
COMMENT ON COLUMN SC_TEACHER.TEACHER_GENDER IS '교사 성별';
COMMENT ON COLUMN SC_TEACHER.TEACHER_OLD IS '교사 나이';
COMMENT ON COLUMN SC_TEACHER.TEACHER_PHONE IS '교사 연락처';
COMMENT ON COLUMN SC_TEACHER.TEACHER_CLASS IS '교사 담당 과목';
COMMENT ON COLUMN SC_TEACHER.TEACHER_SALARY_CLASS IS '교사 호봉';
COMMENT ON COLUMN SC_TEACHER.TEACHER_SALARY IS '교사 월급';
COMMENT ON COLUMN SC_TEACHER.TEACHER_HIRE_DATE IS '교사 임명 날짜';

DROP TABLE SC_SUBJECT;
CREATE TABLE SC_SUBJECT(
  SUBJECT_NO NUMBER
, SUBJECT_NAME VARCHAR2(30) CONSTRAINT NN_SUBJECT_NAME NOT NULL 
, SUBJECT_CURRICULUM VARCHAR2(6) CONSTRAINT NN_SUBJECT_CURRICULUM NOT NULL
, CONSTRAINT PK_SUBJECT_NO PRIMARY KEY (SUBJECT_NO)
, CONSTRAINT CK_SUBJECT_CURRICULUM CHECK(SUBJECT_CURRICULUM IN ('문과' , '이과' , '공통'))
);

COMMENT ON COLUMN SC_SUBJECT.SUBJECT_NO IS '과목 번호';
COMMENT ON COLUMN SC_SUBJECT.SUBJECT_NAME IS '과목 이름';
COMMENT ON COLUMN SC_SUBJECT.SUBJECT_CURRICULUM IS '과목 구분';

DESC SC_SUBJECT;
CREATE SEQUENCE SUBJECT_NO;

INSERT
  INTO SC_SUBJECT
(
  SUBJECT_NO, SUBJECT_NAME, SUBJECT_CURRICULUM
)
VALUES
(
  SUBJECT_NO.NEXTVAL, '국어', '공통'
);


DESC SC_TEACHER;
CREATE SEQUENCE TEACHER_NO;
INSERT
  INTO SC_TEACHER
(
  TEACHER_NO, TEACHER_NAME, TEACHER_GENDER
, TEACHER_OLD, TEACHER_PHONE, TEACHER_CLASS
, TEACHER_SALARY_CLASS, TEACHER_SALARY, TEACHER_HIRE_DATE
)
VALUES
(
  TEACHER_NO.NEXTVAL, '김교사', 'M'
, 49, '010-1234-5678', 1
, 4, 2200000, TO_DATE(20180121, 'RRRRMMDD')
);

DESC SC_CLASS;

INSERT 
  INTO SC_CLASS
(
  CLASS_GRADE, CLASS_NUMBER, CLASS_CURRICULUM
, CLASS_HIGH, CLASS_PRESIDENT, CLASS_COACH_TEACHER  
)
VALUES
(
  1, 1, '공통'
, 'M', 'Y', 10  
);

SELECT * FROM SC_SUBJECT;
SELECT * FROM SC_TEACHER;
SELECT * FROM SC_CLASS;
SELECT * FROM SC_STUDENT;
SELECT * FROM SC_PARENTS;