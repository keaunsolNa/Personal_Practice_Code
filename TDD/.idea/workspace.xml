<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="10438cf1-3f19-4ef6-8fb0-3c39cb83ebcf" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaScript File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2TMJxaB5V3K3zSxm9gnbAOIAQ1n" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "jdk.selected.JAVA_MODULE": "azul-13",
    "last_opened_file_path": "C:/H5_R&D",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs.jest.jest_package": "C:/Study/TDD/node_modules/jest",
    "nodejs_package_manager_path": "npm",
    "settings.editor.selected.configurable": "preferences.externalDependencies",
    "ts.external.directory.path": "C:\\Program Files\\JetBrains\\IntelliJ IDEA 2023.1.1\\plugins\\javascript-impl\\jsLanguageServicesImpl\\external",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RunManager" selected="Jest.Get /api/product/:productId">
    <configuration name="Get /api/product/:productId" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/integration/products.int.test.js" />
      <test-names>
        <test-name value="Get /api/product/:productId" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="POST /api/products" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/integration/products.int.test.js" />
      <test-names>
        <test-name value="POST /api/products" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Product Controller GetById.should handle errors" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/unit/products.test.js" />
      <test-names>
        <test-name value="Product Controller GetById" />
        <test-name value="should handle errors" />
      </test-names>
      <method v="2" />
    </configuration>
    <configuration name="Product Controller GetById.should return 404 when item doesnt exist" type="JavaScriptTestRunnerJest" temporary="true" nameIsGenerated="true">
      <node-interpreter value="project" />
      <jest-package value="$PROJECT_DIR$/node_modules/jest" />
      <working-dir value="$PROJECT_DIR$" />
      <envs />
      <scope-kind value="TEST" />
      <test-file value="$PROJECT_DIR$/test/unit/products.test.js" />
      <test-names>
        <test-name value="Product Controller GetById" />
        <test-name value="should return 404 when item doesnt exist" />
      </test-names>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Jest.Get /api/product/:productId" />
        <item itemvalue="Jest.Product Controller GetById.should return 404 when item doesnt exist" />
        <item itemvalue="Jest.Product Controller GetById.should handle errors" />
        <item itemvalue="Jest.POST /api/products" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="10438cf1-3f19-4ef6-8fb0-3c39cb83ebcf" name="Changes" comment="" />
      <created>1690847263295</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1690847263295</updated>
      <workItem from="1690847264291" duration="17304000" />
      <workItem from="1690886526139" duration="38000" />
      <workItem from="1690954176565" duration="644000" />
      <workItem from="1690975329660" duration="595000" />
      <workItem from="1691018618818" duration="9393000" />
      <workItem from="1691058476293" duration="49000" />
      <workItem from="1691104345186" duration="6732000" />
      <workItem from="1691138759374" duration="648000" />
      <workItem from="1691307597023" duration="231000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>