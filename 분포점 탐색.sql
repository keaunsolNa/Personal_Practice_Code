CREATE TABLE DOT
(
  PID VARCHAR2(6)           -- 임의점 ID
, X1 NUMBER                 -- 임의점 X축
, X2 NUMBER                 -- 임의점 Y축
, CONSTRAINT PK_PID PRIMARY KEY(PID)
);

DROP TABLE T_GROUP;
CREATE TABLE T_GROUP
(
  T_GROUP_ID NUMBER             -- 그룹 ID
, STUDENT_ID VARCHAR2(15)       -- 본인 이름
, STEP NUMBER                   -- 개별 STEP
, PID VARCHAR2(6)               -- DOT의 ID, 개별 점
, GID VARCHAR2(6)               -- 개별점이 가까운 지점 (RBY)
, CONSTRAINT PK_SID_STEP PRIMARY KEY(T_GROUP_ID)
);

DROP TABLE RBY;
CREATE TABLE RBY
(
  RBY_ID NUMBER                 -- RBY ID
, STUDENT_ID VARCHAR2(15)       -- 본인 이름
, STEP NUMBER                   -- 개별 STEP
, RX1 NUMBER                    -- 중간좌표 R의 X축
, RX2 NUMBER                    -- 중간좌표 R의 Y축
, BX1 NUMBER                    -- 중간좌표 B의 X축
, BX2 NUMBER                    -- 중간좌표 B의 Y축
, YX1 NUMBER                    -- 중간좌표 Y의 X축
, YX2 NUMBER                    -- 중간좌표 Y의 Y축
, CONSTRAINT PK_RBY_ID PRIMARY KEY(RBY_ID)
);

--------------------------------------------------------------------------------------

SET SERVEROUTPUT ON;
DROP SEQUENCE SEQRBY;
CREATE SEQUENCE SEQRBY;
DROP SEQUENCE SEQGROUP;
CREATE SEQUENCE SEQGROUP; 

DECLARE
  RBYSTEP NUMBER := 1;
  GROUPSTEP NUMBER := 1;
  FRX1 NUMBER := ROUND(DBMS_RANDOM.VALUE(-200, 200));
  FRX2 NUMBER := ROUND(DBMS_RANDOM.VALUE(-200, 200));
  FBX1 NUMBER := ROUND(DBMS_RANDOM.VALUE(-200, 200));
  FBX2 NUMBER := ROUND(DBMS_RANDOM.VALUE(-200, 200));
  FYX1 NUMBER := ROUND(DBMS_RANDOM.VALUE(-200, 200));
  FYX2 NUMBER := ROUND(DBMS_RANDOM.VALUE(-200, 200));
  D01 NUMBER;
  D02 NUMBER;
  D03 NUMBER;
  BRX1 NUMBER;
  BRX2 NUMBER;
  BBX1 NUMBER;
  BBX2 NUMBER;
  BYX1 NUMBER;
  BYX2 NUMBER;
BEGIN
  LOOP
    INSERT
      INTO RBY(RBY_ID, STUDENT_ID, STEP, RX1, RX2, BX1, BX2, YX1, YX2)
      VALUES
        (SEQRBY.NEXTVAL, 'KS', RBYSTEP, FRX1, FRX2, 
          FBX1, FBX2, FYX1, FYX2
        );

    LOOP        
      IF(GROUPSTEP > 300) THEN EXIT;
      END IF;
      
      SELECT 
        SQRT(POWER((SELECT RX1 FROM RBY WHERE RBY_ID = RBYSTEP) - (SELECT A.X1 FROM DOT A WHERE REPLACE(PID, 'P') = GROUPSTEP),2) + 
          POWER((SELECT RX2 FROM RBY WHERE RBY_ID = RBYSTEP) - (SELECT A.X2 FROM DOT A WHERE REPLACE(PID, 'P') = GROUPSTEP),2)),
        SQRT(POWER((SELECT BX1 FROM RBY WHERE RBY_ID = RBYSTEP) - (SELECT A.X1 FROM DOT A WHERE REPLACE(PID, 'P') = GROUPSTEP),2) + 
          POWER((SELECT BX2 FROM RBY WHERE RBY_ID = RBYSTEP) - (SELECT A.X2 FROM DOT A WHERE REPLACE(PID, 'P') = GROUPSTEP),2)),
        SQRT(POWER((SELECT YX1 FROM RBY WHERE RBY_ID = RBYSTEP) - (SELECT A.X1 FROM DOT A WHERE REPLACE(PID, 'P') = GROUPSTEP),2) + 
          POWER((SELECT YX2 FROM RBY WHERE RBY_ID = RBYSTEP) - (SELECT A.X2 FROM DOT A WHERE REPLACE(PID, 'P') = GROUPSTEP),2))
        INTO D01, D02, D03
        FROM DUAL;

      INSERT
        INTO T_GROUP(T_GROUP_ID, STUDENT_ID, STEP, PID, GID)
        VALUES
        (
          SEQGROUP.NEXTVAL, 'KS', GROUPSTEP,
          CASE 
            WHEN GROUPSTEP < 10 
              THEN 'P00' || GROUPSTEP
            WHEN GROUPSTEP < 100
              THEN 'P0' || GROUPSTEP
            ELSE 'P' || GROUPSTEP
          END,  
          (CASE 
            WHEN D01 < D02 AND D01 < D03
            THEN 'R'
            WHEN D02 < D01 AND D02 < D03
            THEN 'B'
            ELSE 'Y'
          END)    
        );
      
      GROUPSTEP := GROUPSTEP + 1;  
      
    END LOOP; 
      SELECT
        (SELECT ROUND(SUM(B.X1)/300) FROM T_GROUP A LEFT JOIN DOT B ON (A.PID = B.PID) WHERE GID = 'R' AND T_GROUP_ID BETWEEN (RBYSTEP-1)*GROUPSTEP AND RBYSTEP*GROUPSTEP),
        (SELECT ROUND(SUM(B.X2)/300) FROM T_GROUP A LEFT JOIN DOT B ON (A.PID = B.PID) WHERE GID = 'R' AND T_GROUP_ID BETWEEN (RBYSTEP-1)*GROUPSTEP AND RBYSTEP*GROUPSTEP),
        (SELECT ROUND(SUM(B.X1)/300) FROM T_GROUP A LEFT JOIN DOT B ON (A.PID = B.PID) WHERE GID = 'B' AND T_GROUP_ID BETWEEN (RBYSTEP-1)*GROUPSTEP AND RBYSTEP*GROUPSTEP),
        (SELECT ROUND(SUM(B.X2)/300) FROM T_GROUP A LEFT JOIN DOT B ON (A.PID = B.PID) WHERE GID = 'B' AND T_GROUP_ID BETWEEN (RBYSTEP-1)*GROUPSTEP AND RBYSTEP*GROUPSTEP),
        (SELECT ROUND(SUM(B.X1)/300) FROM T_GROUP A LEFT JOIN DOT B ON (A.PID = B.PID) WHERE GID = 'Y' AND T_GROUP_ID BETWEEN (RBYSTEP-1)*GROUPSTEP AND RBYSTEP*GROUPSTEP),
        (SELECT ROUND(SUM(B.X2)/300) FROM T_GROUP A LEFT JOIN DOT B ON (A.PID = B.PID) WHERE GID = 'Y' AND T_GROUP_ID BETWEEN (RBYSTEP-1)*GROUPSTEP AND RBYSTEP*GROUPSTEP)
        INTO FRX1, FRX2, FBX1, FBX2, FYX1, FYX2
        FROM DUAL;
        
      IF(RBYSTEP > 1) THEN
        SELECT RX1, RX2, BX1, BX2, YX1, YX2
          INTO BRX1, BRX2, BBX1, BBX2, BYX1, BYX2
          FROM RBY
        WHERE STEP = RBYSTEP -1;  
      END IF;
        
      IF(FRX1 = BRX1 AND FRX2 = BRX2 AND FBX1 = BBX1 AND FBX2 = BBX2 AND FYX1 = BYX1 AND FYX2 = BYX2) THEN EXIT;
      END IF;
      
      IF(RBYSTEP > 100) THEN EXIT;
      END IF;
        
      GROUPSTEP := 1;        
      RBYSTEP := RBYSTEP + 1; 
  END LOOP; 
END;
/

SELECT * FROM T_GROUP;
SELECT * FROM RBY;